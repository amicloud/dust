cmake_minimum_required(VERSION 3.17)
project(dust)
#list(APPEND CMAKE_MODULE_PATH "cmake")
list(APPEND CMAKE_MODULE_PATH "${CMAKE_CURRENT_SOURCE_DIR}/cmake")
find_package (OpenGL REQUIRED)
add_library(sse4_1 INTERFACE IMPORTED)
if(MSVC)
    target_compile_options(sse4_1 INTERFACE /arch:SSE4.1)
else()
    target_compile_options(sse4_1 INTERFACE -msse4.1)
endif()
set(CMAKE_CXX_STANDARD 17)
set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} /STACK:80000000")
set(glfwIncDir "${CMAKE_CURRENT_SOURCE_DIR}/dependencies/glfw/include")
set(imguiIncDir "${CMAKE_CURRENT_SOURCE_DIR}/dependencies/imgui")
set(glfwLib "${CMAKE_CURRENT_SOURCE_DIR}/dependencies/glfw/lib-vc2017/glfw3.lib")
set(glewIncDir "${CMAKE_CURRENT_SOURCE_DIR}/dependencies/glew/include")
set(glmIncDir "${CMAKE_CURRENT_SOURCE_DIR}/dependencies/glm")
set(glewLib "${CMAKE_CURRENT_SOURCE_DIR}/dependencies/glew/lib/Release/Win32/glew32s.lib")
set(eigenIncDir "${CMAKE_CURRENT_SOURCE_DIR}/dependencies/Eigen/src")
set(eventppIncDir "${CMAKE_CURRENT_SOURCE_DIR}/dependencies/eventpp")
set(srcDir "src")
set(physicsDir "src/physics")
set(rendererDir "src/renderer")
set(coreDir "src/core")
set(eventsDir "src/events")
#set(catchIncDir "${CMAKE_CURRENT_SOURCE_DIR}/dependencies/catch")
include_directories(${glfwIncDir} ${glewIncDir} ${eigenIncDir} ${imguiIncDir} ${glmIncDir} ${srcDir} ${physicsDir} ${rendererDir} ${coreDir}  ${eventsDir} ${eventppIncDir})
add_executable(dust src/Dust.cpp src/Dust.h src/renderer/Renderer.cpp src/renderer/Renderer.h src/physics/Physics.h src/Logger.h src/Logger.cpp src/Constants.h src/renderer/Shader.cpp src/renderer/Shader.h
        ${imguiIncDir}/imgui.cpp ${imguiIncDir}/imgui.h ${imguiIncDir}/imgui_impl_glfw.cpp ${imguiIncDir}/imgui_impl_glfw.h
        ${imguiIncDir}/imgui_impl_opengl3.cpp ${imguiIncDir}/imgui_impl_opengl3.h ${imguiIncDir}/imgui_draw.cpp ${imguiIncDir}/imconfig.h
        ${imguiIncDir}/imstb_rectpack.h ${imguiIncDir}/imstb_textedit.h ${imguiIncDir}/imstb_truetype.h
        ${imguiIncDir}/imgui_tables.cpp ${imguiIncDir}/imgui_widgets.cpp src/physics/SimplePhysics.cpp src/physics/SimplePhysics.h src/physics/ParticlePhysics.cpp src/physics/ParticlePhysics.h src/Input.cpp src/Input.h src/physics/Quark.cpp src/physics/Quark.h src/physics/Lepton.cpp src/physics/Lepton.h
        src/renderer/ui/Gui.h src/renderer/ui/Gui.cpp src/core/Layer.h src/renderer/RenderLayer.cpp src/renderer/RenderLayer.h src/physics/Hadron.h src/physics/Hadron.cpp src/Constants.cpp
        src/core/events/Event.h src/core/events/MouseEvent.cpp src/core/events/MouseEvent.h src/core/KeyCode.h)
target_include_directories( dust PRIVATE glfwIncDir glewIncDir eigenIncDir imguiIncDir glmIncDir srcDir physicsDir rendererDir rendererDir coreDir eventsDir)
target_link_libraries( dust PRIVATE ${glfwLib} ${glewLib} openGL32)
set_property(TARGET dust PROPERTY VS_DEBUGGER_WORKING_DIRECTORY ".")

if(CMAKE_BUILD_TYPE MATCHES Debug)
    target_compile_definitions(dust PUBLIC DEBUG=1)
    target_compile_definitions(dust PUBLIC SHADER_DEBUG=0)
elseif(CMAKE_BUILD_TYPE MATCHES Release)
    target_compile_definitions(dust PUBLIC DEBUG=0)
    target_compile_definitions(dust PUBLIC SHADER_DEBUG=0)
endif()